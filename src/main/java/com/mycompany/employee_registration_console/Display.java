package com.mycompany.employee_registration_console;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.regex.Pattern;
import java.util.regex.Matcher;

public class Display extends javax.swing.JFrame {

    /**
     * Creates new form Display
     */
    public Display() {
        initComponents();
        table_update();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        e_location = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        e_name = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        e_surname = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        e_phoneno = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        e_emailid = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        e_gender = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        SubmitBtn = new javax.swing.JButton();
        EditBtn = new javax.swing.JButton();
        DeleteBtn = new javax.swing.JButton();
        e_jobrole = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableData = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "REGISTRATION", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BELOW_TOP, new java.awt.Font("Times New Roman", 0, 12))); // NOI18N
        jPanel1.setToolTipText("");
        jPanel1.setMaximumSize(new java.awt.Dimension(300, 100));

        jLabel2.setText("NAME");

        e_location.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e_locationActionPerformed(evt);
            }
        });

        e_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e_nameActionPerformed(evt);
            }
        });

        jLabel4.setText("SURNAME");

        e_surname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e_surnameActionPerformed(evt);
            }
        });

        jLabel5.setText("LOCATION");

        jLabel6.setText("PHONE NO");

        e_phoneno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e_phonenoActionPerformed(evt);
            }
        });

        jLabel8.setText("EMAIL ID");

        e_emailid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e_emailidActionPerformed(evt);
            }
        });

        jLabel9.setText("GENDER");

        e_gender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e_genderActionPerformed(evt);
            }
        });

        jLabel10.setText("JOB ROLE");

        SubmitBtn.setText("SUBMIT");
        SubmitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitBtnActionPerformed(evt);
            }
        });

        EditBtn.setText("EDIT");
        EditBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EditBtnMouseClicked(evt);
            }
        });
        EditBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditBtnActionPerformed(evt);
            }
        });

        DeleteBtn.setText("DELETE");
        DeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBtnActionPerformed(evt);
            }
        });

        e_jobrole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                e_jobroleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(433, 433, 433)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(e_name, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(25, 25, 25)
                                        .addComponent(jLabel4)
                                        .addGap(5, 5, 5)
                                        .addComponent(e_surname, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(25, 25, 25)
                                        .addComponent(jLabel5))
                                    .addComponent(jLabel9))
                                .addGap(5, 5, 5)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(e_location, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(e_gender, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(18, 18, 18)
                                .addComponent(e_jobrole))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(5, 5, 5)
                                .addComponent(e_phoneno, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addComponent(jLabel8)))
                        .addGap(5, 5, 5)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(SubmitBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(EditBtn)
                                .addGap(10, 10, 10)
                                .addComponent(DeleteBtn)
                                .addGap(39, 39, 39))
                            .addComponent(e_emailid, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(e_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(e_location, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(e_surname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(e_phoneno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(e_emailid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(e_gender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(e_jobrole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SubmitBtn)
                    .addComponent(EditBtn)
                    .addComponent(DeleteBtn))
                .addGap(15, 15, 15))
        );

        jDesktopPane1.setLayer(jPanel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.getAccessibleContext().setAccessibleName("");

        TableData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Name", "Surname", "Location", "Phone No", "Email Id", "Gender", "Job Role"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TableData.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                TableDataMouseWheelMoved(evt);
            }
        });
        TableData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableDataMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TableData);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("     EMPLOYEE REGISTRATION PORTAL");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 762, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDesktopPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(194, 194, 194))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                .addGap(47, 47, 47))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void EditBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditBtnActionPerformed
        
        DefaultTableModel df = (DefaultTableModel) TableData.getModel();
        int selectIndex = TableData.getSelectedRow();

        String url = "jdbc:mysql://localhost:3306/employee_db";
        String pass = "root";
        String user = "root";

        try {
            int id = Integer.parseInt(df.getValueAt(selectIndex, 0).toString());

            String name = e_name.getText();
            String surname = e_surname.getText();
            String location = e_location.getText();
            String phoneno = e_phoneno.getText();
            String emailid = e_emailid.getText();
            String gender = e_gender.getText();
            String jobrole = e_jobrole.getText();
            
            //        -------------------------------------Validation Name--------------------------------------------
            String namePattern = "^[a-zA-Z]+$";
            Pattern patternName = Pattern.compile(namePattern);
            Matcher matcherName = patternName.matcher(name);
            if (name.equals("")) {
                JOptionPane.showMessageDialog(this, "Enter the name");
                e_name.requestFocus();
                return;
            }
            if (!matcherName.matches()) {
                JOptionPane.showMessageDialog(this, "Invalid name");
                e_name.requestFocus();
                return;
            }
            
            //        ---------------------VALIDATION SURNAME----------------------------------------------------------
        String surnamePattern = "^[a-zA-Z]+$";
        Pattern patternSurname = Pattern.compile(surnamePattern);
        Matcher matcherSurname = patternSurname.matcher(surname);

        if (surname.equals("")) {
            JOptionPane.showMessageDialog(this, "Enter the Surname");
            e_surname.requestFocus();
            return;
        }

        if (!matcherSurname.matches()) {
            JOptionPane.showMessageDialog(this, "Invalid surname");
            e_surname.requestFocus();
            return;
        }

//        -------------------------VALIDATION LOCATION------------------------------------------    
        String locationPattern = "^[a-zA-Z]+$";
        Pattern patternLocation = Pattern.compile(locationPattern);
        Matcher matcherLocation = patternLocation.matcher(location);

        if (location.equals("")) {
            JOptionPane.showMessageDialog(this, "Enter the Location");
            e_location.requestFocus();
            return;
        }

        if (!matcherLocation.matches()) {
            JOptionPane.showMessageDialog(this, "Invalid location");
            e_location.requestFocus();
            return;
        }

//    ---------------------------VALIDATION PHONE NUMBER ------------------------------
        String phonePattern = "^[0-9]{10}$"; // Allow 10-digit numbers only
        Pattern patternPhoneno = Pattern.compile(phonePattern);
        Matcher matcher = patternPhoneno.matcher(phoneno);

        if (phoneno.equals("")) {
            JOptionPane.showMessageDialog(this, "Enter the number");
            e_location.requestFocus();
            return;
        }

        if (!matcher.matches()) {
            JOptionPane.showMessageDialog(this, "Invalid phone number");
            e_phoneno.requestFocus();
            return;
        }

        //    ---------------------------VALIDATION EMAIL ID ------------------------------
    

        String emailPattern = "^[a-zA-Z0-9._%+-]+@gmail\\.com$";
        Pattern patternEmailid = Pattern.compile(emailPattern);
        Matcher matcherEmailid = patternEmailid.matcher(emailid);
        
        if (emailid.equals("")) {
            JOptionPane.showMessageDialog(this, "Enter the email id");
            e_emailid.requestFocus();
            return;
        }

        if (!matcherEmailid.matches()) {
            JOptionPane.showMessageDialog(this, "Invalid email address");
            e_emailid.requestFocus();
            return;
        }
        
         //    ---------------------------VALIDATION GENDER ------------------------------
         
         if (gender.equals("")) {
            JOptionPane.showMessageDialog(this, "Enter the gender");
            e_emailid.requestFocus();
            return;
        }
         
         if (!gender.equals("M") && !gender.equals("F")) {
            JOptionPane.showMessageDialog(this, "Choose M/F");
            e_emailid.requestFocus();
            return;
        }
         
//        ------------------------------VALIDATION JOB ROLE---------------------------------
         String jobrolePattern = "^[a-zA-Z ]+$";
        Pattern patternJobrole = Pattern.compile(jobrolePattern);
        Matcher matcherJobrole = patternJobrole.matcher(jobrole);
        if (jobrole.equals("")) {
            JOptionPane.showMessageDialog(this, "Enter the Job role");
            e_jobrole.requestFocus();
            return;
        }
        if (!matcherJobrole.matches()) {
            JOptionPane.showMessageDialog(this, "Invalid Job Role");
            e_jobrole.requestFocus();
            return;
        }
         
//         ----------------------CONNECTION WITH DB-------------------------

            Connection con = DriverManager.getConnection(url, user, pass);
            System.out.println("PARTH");
            PreparedStatement ps = con.prepareStatement("update employee_data set emp_name=? , surname=?,location=?,phoneno=?,emailid=?,gender=?,jobrole=? where id=?");
            ps.setString(1, name);
            ps.setString(2, surname);
            ps.setString(3, location);
            ps.setString(4, phoneno);
            ps.setString(5, emailid);
            ps.setString(6, gender);
            ps.setString(7, jobrole);
            ps.setInt(8, id);
            ps.executeUpdate();
            JOptionPane.showMessageDialog(this, "Recored Updated");
            table_update();
            e_name.setText("");
            e_surname.setText("");
            e_location.setText("");
            e_phoneno.setText("");
            e_emailid.setText("");
            e_gender.setText("");
            e_jobrole.setText("");
            e_name.requestFocus();
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("Exception occured");

        }
    }//GEN-LAST:event_EditBtnActionPerformed

    private void e_emailidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e_emailidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_e_emailidActionPerformed

    private void e_phonenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e_phonenoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_e_phonenoActionPerformed

    private void e_surnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e_surnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_e_surnameActionPerformed

    private void e_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_e_nameActionPerformed

    private void e_locationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e_locationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_e_locationActionPerformed

    private void table_update() {
        int q;
        String url = "jdbc:mysql://localhost:3306/employee_db";
        String pass = "root";
        String user = "root";
        try {
            Connection con = DriverManager.getConnection(url, user, pass);

            PreparedStatement ps = con.prepareStatement("select * from employee_data");
            ResultSet rs = ps.executeQuery();
            ResultSetMetaData rsmd = rs.getMetaData();
            q = rsmd.getColumnCount();
            DefaultTableModel df = (DefaultTableModel) TableData.getModel();
            df.setRowCount(0);

            while (rs.next()) {
                Vector v = new Vector();
                for (int a = 1; a <= q; a++) {
                    v.add(rs.getString("id"));
                    v.add(rs.getString("emp_name"));
                    v.add(rs.getString("surname"));
                    v.add(rs.getString("location"));
                    v.add(rs.getString("phoneno"));
                    v.add(rs.getString("emailid"));
                    v.add(rs.getString("gender"));
                    v.add(rs.getString("jobrole"));
                }
                df.addRow(v);
            }
            System.out.println("TABLE UPDATED");

        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("Exception occured");

        }
    }
    private void SubmitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitBtnActionPerformed

        String name = e_name.getText();
        String surname = e_surname.getText();
        String location = e_location.getText();
        String phoneno = e_phoneno.getText();
        String emailid = e_emailid.getText();
        String gender = e_gender.getText();
        String jobrole = e_jobrole.getText();

//        -------------------------------------Validation Name--------------------------------------------
        String namePattern = "^[a-zA-Z]+$";
        Pattern patternName = Pattern.compile(namePattern);
        Matcher matcherName = patternName.matcher(name);
        if (name.equals("")) {
            JOptionPane.showMessageDialog(this, "Enter the name");
            e_name.requestFocus();
            return;
        }
        if (!matcherName.matches()) {
            JOptionPane.showMessageDialog(this, "Invalid name");
            e_name.requestFocus();
            return;
        }

//        ---------------------VALIDATION SURNAME----------------------------------------------------------
        String surnamePattern = "^[a-zA-Z]+$";
        Pattern patternSurname = Pattern.compile(surnamePattern);
        Matcher matcherSurname = patternSurname.matcher(surname);

        if (surname.equals("")) {
            JOptionPane.showMessageDialog(this, "Enter the Surname");
            e_surname.requestFocus();
            return;
        }

        if (!matcherSurname.matches()) {
            JOptionPane.showMessageDialog(this, "Invalid surname");
            e_surname.requestFocus();
            return;
        }

//        -------------------------VALIDATION LOCATION------------------------------------------    
        String locationPattern = "^[a-zA-Z]+$";
        Pattern patternLocation = Pattern.compile(locationPattern);
        Matcher matcherLocation = patternLocation.matcher(location);

        if (location.equals("")) {
            JOptionPane.showMessageDialog(this, "Enter the Location");
            e_location.requestFocus();
            return;
        }

        if (!matcherLocation.matches()) {
            JOptionPane.showMessageDialog(this, "Invalid location");
            e_location.requestFocus();
            return;
        }

//    ---------------------------VALIDATION PHONE NUMBER ------------------------------
        String phonePattern = "^[0-9]{10}$"; // Allow 10-digit numbers only
        Pattern patternPhoneno = Pattern.compile(phonePattern);
        Matcher matcher = patternPhoneno.matcher(phoneno);

        if (phoneno.equals("")) {
            JOptionPane.showMessageDialog(this, "Enter the number");
            e_phoneno.requestFocus();
            return;
        }

        if (!matcher.matches()) {
            JOptionPane.showMessageDialog(this, "Invalid phone number");
            e_phoneno.requestFocus();
            return;
        }

        //    ---------------------------VALIDATION EMAIL ID ------------------------------
    

        String emailPattern = "^[a-zA-Z0-9._%+-]+@gmail\\.com$";
        Pattern patternEmailid = Pattern.compile(emailPattern);
        Matcher matcherEmailid = patternEmailid.matcher(emailid);
        
        if (emailid.equals("")) {
            JOptionPane.showMessageDialog(this, "Enter the email id");
            e_emailid.requestFocus();
            return;
        }

        if (!matcherEmailid.matches()) {
            JOptionPane.showMessageDialog(this, "Invalid email address");
            e_emailid.requestFocus();
            return;
        }
        
         //    ---------------------------VALIDATION GENDER ------------------------------
         
         if (gender.equals("")) {
            JOptionPane.showMessageDialog(this, "Enter the gender");
            e_emailid.requestFocus();
            return;
        }
         
         if (!gender.equals("M") && !gender.equals("F")) {
            JOptionPane.showMessageDialog(this, "Choose M/F");
            e_emailid.requestFocus();
            return;
        }
         
//        ------------------------------VALIDATION JOB ROLE---------------------------------
         String jobrolePattern = "^[a-zA-Z ]+$";
        Pattern patternJobrole = Pattern.compile(jobrolePattern);
        Matcher matcherJobrole = patternJobrole.matcher(jobrole);
        if (jobrole.equals("")) {
            JOptionPane.showMessageDialog(this, "Enter the Job role");
            e_jobrole.requestFocus();
            return;
        }
        if (!matcherJobrole.matches()) {
            JOptionPane.showMessageDialog(this, "Invalid Job Role");
            e_jobrole.requestFocus();
            return;
        }
         

//        -------------------------CONNECTION WITH DB------------------------------------------
        String url = "jdbc:mysql://localhost:3306/employee_db";
        String pass = "root";
        String user = "root";
        try {

            Connection con = DriverManager.getConnection(url, user, pass);
            System.out.println("SUCCESSFULLY DONE");
            PreparedStatement ps = con.prepareStatement("insert into employee_data (emp_name,surname,location,phoneno,emailid,gender,jobrole) values(?,?,?,?,?,?,?)");
            ps.setString(1, name);
            ps.setString(2, surname);
            ps.setString(3, location);
            ps.setString(4, phoneno);
            ps.setString(5, emailid);
            ps.setString(6, gender);
            ps.setString(7, jobrole);

            ps.executeUpdate();
            JOptionPane.showMessageDialog(this, "Recored Added");
            table_update();
            e_name.setText("");
            e_surname.setText("");
            e_location.setText("");
            e_phoneno.setText("");
            e_emailid.setText("");
            e_gender.setText("");
            e_jobrole.setText("");
            e_name.requestFocus();
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("Exception occured");

        }


    }//GEN-LAST:event_SubmitBtnActionPerformed

    private void TableDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableDataMouseClicked
       
        DefaultTableModel df = (DefaultTableModel) TableData.getModel();
        int selectIndex = TableData.getSelectedRow();

        e_name.setText(df.getValueAt(selectIndex, 1).toString());
        e_surname.setText(df.getValueAt(selectIndex, 2).toString());
        e_location.setText(df.getValueAt(selectIndex, 3).toString());
        e_phoneno.setText(df.getValueAt(selectIndex, 4).toString());
        e_emailid.setText(df.getValueAt(selectIndex, 5).toString());
        e_gender.setText(df.getValueAt(selectIndex, 6).toString());
        e_jobrole.setText(df.getValueAt(selectIndex, 7).toString());
    }//GEN-LAST:event_TableDataMouseClicked

    private void e_jobroleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e_jobroleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_e_jobroleActionPerformed

    private void DeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel df = (DefaultTableModel) TableData.getModel();
        int selectIndex = TableData.getSelectedRow();

        String url = "jdbc:mysql://localhost:3306/employee_db";
        String pass = "root";
        String user = "root";
        try {
            int id = Integer.parseInt(df.getValueAt(selectIndex, 0).toString());

            int dialogResult = JOptionPane.showConfirmDialog(null, "Do you want delete the record ", "Warning", JOptionPane.YES_NO_OPTION);
            if (dialogResult == JOptionPane.YES_OPTION) {
                Connection con = DriverManager.getConnection(url, user, pass);
                System.out.println("PARTH");
                PreparedStatement ps = con.prepareStatement("delete from employee_data where id=?");
                ps.setInt(1, id);
                ps.executeUpdate();
                JOptionPane.showMessageDialog(this, "Recored Deleted");
                table_update();
                e_name.setText("");
                e_surname.setText("");
                e_location.setText("");
                e_phoneno.setText("");
                e_emailid.setText("");
                e_gender.setText("");
                e_jobrole.setText("");
                e_name.requestFocus();

            }

        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("Exception occured");

        }

    }//GEN-LAST:event_DeleteBtnActionPerformed

    private void TableDataMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_TableDataMouseWheelMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_TableDataMouseWheelMoved

    private void e_genderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_e_genderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_e_genderActionPerformed

    private void EditBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EditBtnMouseClicked

    }//GEN-LAST:event_EditBtnMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Display().setVisible(true); 
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DeleteBtn;
    private javax.swing.JButton EditBtn;
    private javax.swing.JButton SubmitBtn;
    private javax.swing.JTable TableData;
    private javax.swing.JTextField e_emailid;
    private javax.swing.JTextField e_gender;
    private javax.swing.JTextField e_jobrole;
    private javax.swing.JTextField e_location;
    private javax.swing.JTextField e_name;
    private javax.swing.JTextField e_phoneno;
    private javax.swing.JTextField e_surname;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

}
